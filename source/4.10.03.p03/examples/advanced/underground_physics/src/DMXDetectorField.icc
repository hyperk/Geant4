//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
  G4double EField = 0.0*kilovolt/cm;

  // create electric field
  G4UniformElectricField* elecField = 
     new G4UniformElectricField(G4ThreeVector(0,EField,0));

  // equation of motion
  G4EqMagElectricField* EquationOfMotion = 
    new G4EqMagElectricField(elecField);

  // stepper for equation of motion
  G4MagIntegratorStepper* DMXStepper = 
    new G4ClassicalRK4(EquationOfMotion); 

  // chordfinder
  G4ChordFinder* DMXChordFinder =
    new G4ChordFinder(elecField, 1.0e-3*mm, DMXStepper);

  // field manager
  G4FieldManager* DMXFieldManager = new G4FieldManager();
  DMXFieldManager->SetChordFinder(DMXChordFinder);  
  G4TransportationManager::GetTransportationManager()
    -> SetFieldManager(DMXFieldManager);
