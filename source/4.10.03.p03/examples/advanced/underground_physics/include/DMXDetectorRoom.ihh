//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// --------------------------------------------------------------
//   GEANT 4 - Underground Dark Matter Detector Advanced Example
//
//      For information related to this code contact: Alex Howard
//      e-mail: alexander.howard@cern.ch
// --------------------------------------------------------------
// Comments
//
//                  Underground Advanced
//               by A. Howard and H. Araujo 
//                    (29th August 2002)
//
// Detector Room include header
// --------------------------------------------------------------

  G4LogicalVolume*   glass_log;
  G4VPhysicalVolume* glass_phys;
  G4LogicalVolume*   window_log;
  G4VPhysicalVolume* window_phys;
  G4LogicalVolume*   sidepanel_log;
  G4VPhysicalVolume* sidepanel_phys;
  G4LogicalVolume*   panelhole_log;
  G4VPhysicalVolume* panelhole_phys;
  G4LogicalVolume*   doorglass_log;
  G4VPhysicalVolume* doorglass_phys;
  G4LogicalVolume*   doorwindow_log;
  G4VPhysicalVolume* doorwindow_phys;
  G4LogicalVolume*   door_log;
  G4VPhysicalVolume* door_phys;  
  G4LogicalVolume*   doorhole_log;
  G4VPhysicalVolume* doorhole_phys;  
  G4LogicalVolume*   cupboard_log;
  G4VPhysicalVolume* cupboard_phys;    
  G4LogicalVolume*   cupboard2_log;
  G4VPhysicalVolume* cupboard2_phys;    
  G4LogicalVolume*   desk1_log;
  G4VPhysicalVolume* desk1_phys;    
  G4LogicalVolume*   desk2_log;
  G4VPhysicalVolume* desk2_phys;    
  G4LogicalVolume*   desk3_log;
  G4VPhysicalVolume* desk3_phys;    
  G4LogicalVolume*   desk4_log;
  G4VPhysicalVolume* desk4_phys;    
  G4LogicalVolume*   crate_log;
  G4VPhysicalVolume* crate_phys;    
  G4LogicalVolume*   trunk_log;
  G4VPhysicalVolume* trunk_phys;
  G4LogicalVolume*   trunk_inside_log;
  G4VPhysicalVolume* trunk_inside_phys;
