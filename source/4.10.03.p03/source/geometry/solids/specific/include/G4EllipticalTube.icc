//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: G4EllipticalTube.icc 83572 2014-09-01 15:23:27Z gcosmo $
//
// --------------------------------------------------------------------
// GEANT 4 inline definitions file
//
// G4EllipticalTube.icc
//
// Implementation of inline methods of G4EllipticalTube
// --------------------------------------------------------------------

inline
G4double G4EllipticalTube::GetDx() const
{
  return dx;
}

inline
G4double G4EllipticalTube::GetDy() const
{
  return dy;
}

inline
G4double G4EllipticalTube::GetDz() const
{
  return dz;
}

inline  
void G4EllipticalTube::SetDx( const G4double newDx )
{
  dx = newDx;
  fCubicVolume = 0.;
  fRebuildPolyhedron = true;
}

inline
void G4EllipticalTube::SetDy( const G4double newDy )
{
  dy = newDy;
  fCubicVolume = 0.;
  fRebuildPolyhedron = true;
}

inline
void G4EllipticalTube::SetDz( const G4double newDz )
{
  dz = newDz;
  fCubicVolume = 0.;
  fRebuildPolyhedron = true;
}
  
inline
G4double G4EllipticalTube::CheckXY( const G4double x,
                                    const G4double y,
                                    const G4double toler ) const
{
  G4double rx = x/(dx+toler), ry = y/(dy+toler);
  return rx*rx + ry*ry;
}

inline
G4double G4EllipticalTube::CheckXY( const G4double x, const G4double y ) const
{
  G4double rx = x/dx, ry = y/dy;
  return rx*rx + ry*ry;
}
